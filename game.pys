fn Pow(a, n)
{
    n = n - 1
    var stored = a
    for (i = 0; i < n; i + 1)
    {
        a = a * stored
    }
    return a
}


class Random(low, up)
{
    var Lower = low
    var Upper = up
    
    // this allows you to make properties pseudo-readonly
    set Lower(val)
    {
        return Lower
    }
    set Upper(val)
    {
        return Upper
    }

    fn RandInt()
    {
        return randint(Lower, Upper)
    }
    
    fn RandFloat(decimalMax)
    {
        var chosenNumber = randint(Lower, Upper)
        var chosenDecimal = randint(0, decimalMax)

        return chosenNumber + (chosenDecimal / Pow(10, len(decimalMax) - 1))
    }
}


var amount = 10
var randArray = []
for (i = 0; i < amount; i + 1)
{
    randArray[i] = Random(i, 20)
}

for (i = 0; i < amount; i + 1)
{
    var lowerBound = randArray[i]
    lowerBound = lowerBound.Lower
    print(lowerBound)
}

var queried = randArray.query(r: r.Lower > 5 && r.Lower < 9)

var length = len(queried)
for (i = 0; i < length; i + 1)
{
    var lowerQueried = queried[i]
    lowerQueried = lowerQueried.Lower
    print(lowerQueried)
}

print("")

var arr = []
for (i = 0; i < 100; i + 1) 
{
    arr[i] = i
}

print(stringify(arr))

print("")

var q = arr.query(x : x % 3 == 0 && x % 5 == 0)
print(stringify(q))
